{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/ingrediente-new/ingrediente-new.component.css","webpack:///./src/app/components/ingrediente-new/ingrediente-new.component.html","webpack:///./src/app/components/ingrediente-new/ingrediente-new.component.ts","webpack:///./src/app/components/menu/menu.component.css","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/security/auth.guard.ts","webpack:///./src/app/components/security/auth.interceptor.ts","webpack:///./src/app/components/security/login/login.component.css","webpack:///./src/app/components/security/login/login.component.html","webpack:///./src/app/components/security/login/login.component.ts","webpack:///./src/app/components/summary/summary.component.css","webpack:///./src/app/components/summary/summary.component.html","webpack:///./src/app/components/summary/summary.component.ts","webpack:///./src/app/components/ticket-detail/ticket-detail.component.css","webpack:///./src/app/components/ticket-detail/ticket-detail.component.html","webpack:///./src/app/components/ticket-detail/ticket-detail.component.ts","webpack:///./src/app/components/ticket-list/ticket-list.component.css","webpack:///./src/app/components/ticket-list/ticket-list.component.html","webpack:///./src/app/components/ticket-list/ticket-list.component.ts","webpack:///./src/app/components/ticket-new/ticket-new.component.css","webpack:///./src/app/components/ticket-new/ticket-new.component.html","webpack:///./src/app/components/ticket-new/ticket-new.component.ts","webpack:///./src/app/components/user-list/user-list.component.css","webpack:///./src/app/components/user-list/user-list.component.html","webpack:///./src/app/components/user-list/user-list.component.ts","webpack:///./src/app/components/user-new/user-new.component.css","webpack:///./src/app/components/user-new/user-new.component.html","webpack:///./src/app/components/user-new/user-new.component.ts","webpack:///./src/app/model/ingrediente.model.ts","webpack:///./src/app/model/summary.model.ts","webpack:///./src/app/model/ticket.model.ts","webpack:///./src/app/model/user.model.ts","webpack:///./src/app/services/dialog.service.ts","webpack:///./src/app/services/ingrediente.service.ts","webpack:///./src/app/services/listacomprasinteligente.api.ts","webpack:///./src/app/services/shared.service.ts","webpack:///./src/app/services/ticket.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header [hidden]=\\\"!showTemplate\\\"></app-header>\\n<app-menu [hidden]=\\\"!showTemplate\\\"></app-menu>\\n<div [ngClass]=\\\"showContentWrapper()\\\"> \\n    <section class=\\\"content-header\\\">\\n    </section>\\n    <section class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n    </section>\\n</div>\\n<app-footer [hidden]=\\\"!showTemplate\\\"></app-footer>\"","import { Component } from '@angular/core';\nimport { SharedService } from './services/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  showTemplate : boolean = false;\n  public shared : SharedService;\n\n  constructor(){\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    this.shared.showTemplate.subscribe(\n      show => this.showTemplate = show\n    );\n  }\n\n  showContentWrapper() {\n    return {\n      'content-wrapper' : this.shared.isLoggedIn()\n    }\n  }\n}\n","import { DialogService } from './services/dialog.service';\nimport { AuthGuard } from './components/security/auth.guard';\nimport { UserService } from './services/user.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/security/login/login.component';\nimport { routes } from './app.routes';\nimport { SharedService } from './services/shared.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AuthInterceptor } from './components/security/auth.interceptor';\nimport { UserNewComponent } from './components/user-new/user-new.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { TicketNewComponent } from './components/ticket-new/ticket-new.component';\nimport { TicketService } from './services/ticket.service';\nimport { TicketListComponent } from './components/ticket-list/ticket-list.component';\nimport { TicketDetailComponent } from './components/ticket-detail/ticket-detail.component';\nimport { SummaryComponent } from './components/summary/summary.component';\nimport { IngredienteNewComponent } from './components/ingrediente-new/ingrediente-new.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MenuComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    UserNewComponent,\n    UserListComponent,\n    TicketNewComponent,\n    TicketListComponent,\n    TicketDetailComponent,\n    SummaryComponent,\n    IngredienteNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    routes\n  ],\n  providers: [\n    UserService, \n    SharedService,\n    DialogService,\n    TicketService,\n    AuthGuard,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : AuthInterceptor,\n      multi : true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { SummaryComponent } from './components/summary/summary.component';\r\nimport { UserNewComponent } from './components/user-new/user-new.component';\r\nimport { AuthGuard } from './components/security/auth.guard';\r\nimport { LoginComponent } from './components/security/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\r\nimport { UserListComponent } from './components/user-list/user-list.component';\r\nimport { TicketNewComponent } from './components/ticket-new/ticket-new.component';\r\nimport { TicketListComponent } from './components/ticket-list/ticket-list.component';\r\nimport { TicketDetailComponent } from './components/ticket-detail/ticket-detail.component';\r\n\r\nexport const ROUTES : Routes = [\r\n    { path : '', component : HomeComponent, canActivate : [AuthGuard]},\r\n    { path : 'login', component : LoginComponent },\r\n    { path : 'user-new', component : UserNewComponent },\r\n    { path : 'user-new/:id', component : UserNewComponent, canActivate : [AuthGuard] },\r\n    { path : 'user-list', component : UserListComponent, canActivate : [AuthGuard] },\r\n    { path : 'ticket-list', component : TicketListComponent, canActivate : [AuthGuard] },\r\n    { path : 'ticket-new', component : TicketNewComponent, canActivate : [AuthGuard] },\r\n    { path : 'ticket-new/:id', component : TicketNewComponent, canActivate : [AuthGuard] },\r\n    { path : 'ticket-detail/:id', component : TicketDetailComponent, canActivate : [AuthGuard] },\r\n    { path : 'summary', component : SummaryComponent, canActivate : [AuthGuard] }\r\n]\r\n\r\nexport const routes : ModuleWithProviders = RouterModule.forRoot(ROUTES);","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<footer class=\\\"main-footer\\\">\\n    <div class=\\\"pull-right hidden-xs\\\">\\n      <b>Versão</b> 1.0.0\\n      Angular CLI: 7.2.3\\n      Node: 10.15.0\\n      Angular: 7.2.16\\n      SpringBoot: 2.1.2\\n      Java 8\\n    </div>\\n    <strong>Copyright &copy; 2018-2019<a href=\\\"https://github.com/ramos1gabriel\\\" target=\\\"_blank\\\"> GRS</a>.</strong> Todos os direitos reservados.\\n  </footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header class=\\\"main-header\\\">\\n\\n    <!-- Logo -->\\n    <a [routerLink]=\\\"['/']\\\" class=\\\"logo\\\">\\n      <span class=\\\"logo-mini\\\"><b>LCI</b></span>\\n      <span class=\\\"logo-lg\\\"><b>ListaCompras</b></span>\\n    </a>\\n\\n    <nav class=\\\"navbar navbar-static-top\\\">\\n      <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n      </a>\\n\\n      <!-- MENU -->\\n      <div class=\\\"navbar-custom-menu\\\">\\n\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li class=\\\"dropdown messages-menu\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-envelope-o\\\"></i>\\n              <span class=\\\"label label-success\\\">4</span>\\n            </a>\\n          </li>\\n\\n          <li class=\\\"dropdown notifications-menu\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-bell-o\\\"></i>\\n              <span class=\\\"label label-warning\\\">10</span>\\n            </a>\\n          </li>\\n\\n          <li class=\\\"dropdown tasks-menu\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-flag-o\\\"></i>\\n              <span class=\\\"label label-danger\\\">9</span>\\n            </a>\\n          </li>\\n\\n          <!-- User Account: style can be found in dropdown.less -->\\n          <li class=\\\"dropdown user user-menu\\\">\\n\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <img src=\\\"assets\\\\img\\\\cozinheira.jpg\\\" class=\\\"user-image\\\" alt=\\\"User Image\\\">\\n              <span class=\\\"hidden-xs\\\">{{ shared.user.nome }}</span>\\n            </a>\\n\\n            <!-- DROPDOWN USER -->\\n            <ul class=\\\"dropdown-menu\\\">\\n              <!-- User image -->\\n              <li class=\\\"user-header\\\">\\n                <img src=\\\"assets\\\\img\\\\cozinheira.jpg\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\n\\n                <p>\\n                  Alexander Pierce - Web Developer\\n                  <small>Member since Nov. 2012</small>\\n                </p>\\n              </li>\\n              <!-- Menu Body -->\\n              <li class=\\\"user-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xs-4 text-center\\\">\\n                    <a href=\\\"#\\\">Followers</a>\\n                  </div>\\n                  <div class=\\\"col-xs-4 text-center\\\">\\n                    <a href=\\\"#\\\">Sales</a>\\n                  </div>\\n                  <div class=\\\"col-xs-4 text-center\\\">\\n                    <a href=\\\"#\\\">Friends</a>\\n                  </div>\\n                </div>\\n                <!-- /.row -->\\n              </li>\\n              <!-- Menu Footer-->\\n              <li class=\\\"user-footer\\\">\\n                <div class=\\\"pull-left\\\">\\n                  <a href=\\\"#\\\" class=\\\"btn btn-default btn-flat\\\">Profile</a>\\n                </div>\\n                <div class=\\\"pull-right\\\">\\n                  <a href=\\\"#\\\" class=\\\"btn btn-default btn-flat\\\">Sign out</a>\\n                </div>\\n              </li>\\n            </ul>\\n\\n          </li>\\n\\n          <!-- SAIR -->\\n          <li>\\n            <a href=\\\"#\\\" id=\\\"logout-confirm\\\" title=\\\"Sair\\\" (click)=\\\"signOut();\\\"><i class=\\\"fa fa-sign-out\\\"></i></a>\\n          </li>\\n\\n        </ul>\\n\\n        <!--\\n        <p style=\\\"color:white\\\">{{ shared.user.nome }} | \\n        <button class=\\\"btn btn-link\\\" (click)=\\\"signOut();\\\"><font style=\\\"color:white\\\">Sair</font></button></p>\\n        -->\\n      </div>\\n\\n    </nav>\\n  </header>\"","import { SharedService } from './../../services/shared.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/model/user.model';\nimport * as $ from 'jquery';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  public shared : SharedService;\n\n  constructor() {\n    this.shared = SharedService.getInstance();\n    this.shared.user = new User('', '', '', '', '');\n  }\n\n  ngOnInit() {\n  }\n\n  signOut() : void {\n    this.shared.token = null;\n    this.shared.user = null;\n    window.location.href = '/login';\n    window.location.reload();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Welcome!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5ncmVkaWVudGUtbmV3L2luZ3JlZGllbnRlLW5ldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"col-md-6\\\" style=\\\"margin-left:  0%\\\">\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">Novo Ingrediente</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <span>{{ message.text }}</span>\\n      </div>\\n\\n      <div class=\\\"box-body\\\">\\n\\n        <div [ngClass]=\\\"getFromGroupClass(email.invalid, email.dirty)\\\">\\n          <label for=\\\"inputNome\\\" class=\\\"col-sm-2 control-label\\\">Nome</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input \\n                  type=\\\"nome\\\" \\n                  [(ngModel)]=\\\"ingrediente.nome\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"nome\\\" \\n                  id=\\\"inputNome\\\" \\n                  #nome=\\\"ngModel\\\" \\n                  placeholder=\\\"Nome\\\" \\n                  required>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.dirty\\\">Nome é necessário</span>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"box-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Gravar</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { IngredienteService } from './../../services/ingrediente.service';\nimport { SharedService } from './../../services/shared.service';\nimport { Ingrediente } from './../../model/ingrediente.model';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ingrediente-new',\n  templateUrl: './ingrediente-new.component.html',\n  styleUrls: ['./ingrediente-new.component.css']\n})\nexport class IngredienteNewComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm\n\n  ingrediente = new Ingrediente('', '');\n  shared : SharedService;\n  message: {};\n  classCss: {};\n\n  constructor(\n    private IngredienteService : IngredienteService,\n    private route : ActivatedRoute\n  ) { \n\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id : string = this.route.snapshot.params['id'];\n    if(id != undefined){\n      this.findById(id);\n    }\n  }\n\n  findById(id : string) {\n    this.IngredienteService.findById(id).subscribe((responseApi : ResponseApi) => {\n      this.ingrediente = responseApi.data;\n      //this.user.senha = '';\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  save(){\n    this.message = {};\n    this.IngredienteService.createOrUpdate(this.ingrediente).subscribe((responseApi : ResponseApi) => {\n      this.ingrediente = new Ingrediente('', '');\n      let ingredienteRet : Ingrediente = responseApi.data;\n      this.form.resetForm();\n      this.showMessage({\n        type : 'success',\n        text : `${ingredienteRet.nome} cadastrado com sucesso!`\n      });\n      //window.location.href = '/login';\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<aside class=\\\"main-sidebar\\\">\\n    <section class=\\\"sidebar\\\">\\n\\n    <!-- Sidebar user panel -->\\n    <div class=\\\"user-panel\\\">\\n      <div class=\\\"pull-left image\\\">\\n        <img src=\\\"assets/img/cozinheira.jpg\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\n      </div>\\n      <div class=\\\"pull-left info\\\">\\n        <p>{{ shared.user.nome }}</p>\\n        <a href=\\\"javascript:void(0)\\\"><i class=\\\"fa fa-circle text-success\\\"></i> Online</a>\\n      </div>\\n    </div>\\n\\n      <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\n        <li class=\\\"header\\\">MAIN NAVIGATION</li>\\n        <li class=\\\"treeview\\\">\\n          <a href=\\\"#\\\">\\n            <i class=\\\"fa fa-apple\\\"></i><span>Ingredientes</span>\\n            <span class=\\\"pull-right-container\\\">\\n              <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n            </span>\\n          </a>\\n          <ul class=\\\"treeview-menu\\\">\\n            <li><a [routerLink]=\\\"['/user-list']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Lista</a></li>\\n            <li><a [routerLink]=\\\"['/ingrediente-new']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Novo Ingrediente</a></li>\\n          </ul>\\n        </li>\\n\\n        <li class=\\\"treeview\\\">\\n            <a href=\\\"#\\\">\\n              <i class=\\\"fa fa-book\\\"></i><span>Receitas</span>\\n              <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n            </a>\\n            <ul class=\\\"treeview-menu\\\">\\n              <li><a [routerLink]=\\\"['/ticket-list']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Lista</a></li>\\n              <li><a [routerLink]=\\\"['/ticket-new']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Novo Ticket</a></li>\\n            </ul>\\n          </li>\\n\\n          <li class=\\\"treeview\\\">\\n            <a href=\\\"#\\\">\\n              <i class=\\\"fa fa-pencil-square-o \\\"></i><span>Cardápios</span>\\n              <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n            </a>\\n            <ul class=\\\"treeview-menu\\\">\\n              <li><a [routerLink]=\\\"['/ticket-list']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Lista</a></li>\\n              <li><a [routerLink]=\\\"['/ticket-new']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Novo Ticket</a></li>\\n            </ul>\\n          </li>\\n\\n          <li class=\\\"treeview\\\">\\n              <a href=\\\"#\\\">\\n                <i class=\\\"fa fa-shopping-basket\\\"></i><span>Lista de Compras</span>\\n                <span class=\\\"pull-right-container\\\">\\n                  <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n                </span>\\n              </a>\\n              <ul class=\\\"treeview-menu\\\">\\n                <li><a [routerLink]=\\\"['/summary']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Ver</a></li>\\n              </ul>\\n            </li>\\n\\n            <li class=\\\"treeview\\\">\\n              <a href=\\\"#\\\">\\n                <i class=\\\"fa fa-edit\\\"></i><span>USAR COMO EXEMPLO</span>\\n                <span class=\\\"pull-right-container\\\">\\n                  <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n                </span>\\n              </a>\\n              <ul class=\\\"treeview-menu\\\">\\n                <li><a [routerLink]=\\\"['/user-list']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Lista</a></li>\\n                <li><a [routerLink]=\\\"['/user-new']\\\"><i class=\\\"fa fa-circle-o\\\"></i>Novo Usuário</a></li>\\n              </ul>\\n            </li>\\n\\n      </ul>\\n    </section>\\n  </aside>\"","import { SharedService } from 'src/app/services/shared.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  shared : SharedService;\n\n  constructor() {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    public shared : SharedService;\r\n\r\n    constructor(private router : Router) {\r\n        this.shared = SharedService.getInstance();\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n\r\n        if(this.shared.isLoggedIn()){\r\n            return true;\r\n        }\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    shared : SharedService;\r\n\r\n    constructor(){\r\n        this.shared = SharedService.getInstance();\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let authRequest : any;\r\n\r\n        if(this.shared.isLoggedIn()){\r\n            authRequest = req.clone({\r\n                setHeaders: {\r\n                    'Authorization' : this.shared.token\r\n                }\r\n            });\r\n            return next.handle(authRequest);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdXJpdHkvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- LAYOUT ANTIGO \\n\\n<div class=\\\"col-md-6\\\" style=\\\"margin-left:  20%\\\">\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">Lista de Compras Inteligente</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n\\n      <div class=\\\"alert alert-error\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <span>Nome de usuário ou senha inválido!</span>\\n      </div>\\n\\n      <div class=\\\"box-body\\\">\\n\\n        <div [ngClass]=\\\"getFromGroupClass(username.invalid, username.dirty)\\\">\\n          <label for=\\\"inputUsername\\\" class=\\\"col-sm-2 control-label\\\">Nome de Usuário</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input \\n                  type=\\\"text\\\" \\n                  [(ngModel)]=\\\"user.username\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"username\\\" \\n                  id=\\\"inputUsername\\\" \\n                  #username=\\\"ngModel\\\" \\n                  placeholder=\\\"Nome de Usuário\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"username.invalid && username.dirty\\\">Nome de usuário é inválido</span>\\n          </div>\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(password.invalid, password.dirty)\\\">\\n          <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 control-label\\\">Senha</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input \\n                  type=\\\"password\\\" \\n                  [(ngModel)]=\\\"user.password\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"password\\\" \\n                  id=\\\"inputPassword\\\" \\n                  #password=\\\"ngModel\\\" \\n                  placeholder=\\\"Senha\\\" \\n                  required>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"password.invalid && password.dirty\\\">Senha é necessária</span>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"box-footer\\\">\\n        \\n        <a [routerLink]=\\\"['/user-new']\\\" class=\\\"\\\">Cadastra-se</a>\\n        <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Login</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n-->\\n\\n<!-- LAYOUT ALTERNATIVO -->\\n<div class=\\\"login-box\\\">\\n  <div class=\\\"login-logo\\\">\\n    <p class=\\\"\\\"><b>Lista de Compras </b>Inteligente</p>\\n  </div>\\n\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"card-body login-card-body\\\">\\n      <p></p>\\n      <p class=\\\"login-box-msg\\\">Faça login para iniciar sua sessão</p>\\n\\n      <div class=\\\"alert alert-error\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <span>Nome de usuário ou senha inválido!</span>\\n      </div>\\n\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n\\n        <div [ngClass]=\\\"getFromGroupClass(username.invalid, username.dirty)\\\">\\n\\n          <div class=\\\"mb-3\\\">\\n            <input type=\\\"text\\\" \\n            [(ngModel)]=\\\"user.username\\\" \\n            class=\\\"form-control\\\" \\n            name=\\\"username\\\" \\n            id=\\\"inputUsername\\\" \\n            #username=\\\"ngModel\\\" \\n            placeholder=\\\"Nome de Usuário\\\"\\n            required>\\n\\n            <span class=\\\"help-block\\\" *ngIf=\\\"username.invalid && username.dirty\\\">Nome de usuário é necessário</span>\\n          </div>\\n\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(password.invalid, password.dirty)\\\">\\n\\n          <div class=\\\"mb-3\\\">\\n            <input type=\\\"password\\\" \\n            [(ngModel)]=\\\"user.password\\\" \\n            class=\\\"form-control\\\" \\n            name=\\\"password\\\" \\n            id=\\\"inputPassword\\\" \\n            #password=\\\"ngModel\\\" \\n            placeholder=\\\"Senha\\\"\\n            required>\\n          </div>\\n\\n          <span class=\\\"help-block\\\" *ngIf=\\\"password.invalid && password.dirty\\\">Senha é necessária</span>\\n        </div>\\n        \\n        <div class=\\\"col-8\\\"></div>\\n        <div class=\\\"col-4\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info btn-block\\\">Login</button>\\n        </div>\\n        \\n      </form>\\n\\n      <div class=\\\"social-auth-links text-center mb-3\\\">\\n        <p></p>\\n      </div>\\n\\n      <p class=\\\"mb-1\\\"></p>\\n      <p class=\\\"mb-0\\\">\\n        <a [routerLink]=\\\"['/user-new']\\\"><h4>Criar uma conta</h4></a>\\n      </p>\\n\\n    </div>\\n  </div>\\n</div>\"","import { UserService } from './../../../services/user.service';\nimport { SharedService } from './../../../services/shared.service';\nimport { User } from './../../../model/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { currentUser } from 'src/app/model/current-user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user = new User('', '', '', '', '');\n  shared : SharedService;\n  message : string;\n\n  constructor(\n    private userService  : UserService,\n    private router : Router\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.message = '';\n    this.userService.login(this.user).subscribe((userAuthentication : currentUser) => {\n      this.shared.token = userAuthentication.token;\n      this.shared.user = userAuthentication.user;\n      //this.shared.user.profile = this.shared.user.profile.substring(5);\n      this.shared.showTemplate.emit(true);\n      this.router.navigate(['/']);\n\n      sessionStorage.setItem(\"currentUser\", userAuthentication.toString()); //TESTE F5\n    }, err => {\n      this.shared.token = null;\n      this.shared.user = null;\n      this.shared.showTemplate.emit(false);\n      this.message = 'Erro';\n    });\n  }\n\n  cancelLogin() {\n    this.message = '';\n    this.user = new User('', '', '', '', '');\n    window.location.href = '/login';\n    window.location.reload();\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3VtbWFyeS9zdW1tYXJ5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-6\\\" style=\\\"margin-left: 0%\\\">\\n  <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n    <strong>{{ message.text }}</strong>\\n  </div>\\n  <div class=\\\"box box-body\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3>Resumo</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n      <ul class=\\\"list-group list-group-unbordered\\\">\\n        <li class=\\\"list-group-item\\\">\\n          <b>Novos: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountNew }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Resolvidos: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountResolved }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Aprovados: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountApproved }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Reprovados: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountDisapproved }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Atributos: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountAssigned }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Finalizados: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountClosed }}</span></span>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { TicketService } from './../../services/ticket.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Summary } from 'src/app/model/summary.model';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.css']\n})\nexport class SummaryComponent implements OnInit {\n\n  summary : Summary = new Summary();\n  message : {};\n  classCss : {};\n\n  constructor(\n    private ticketService : TicketService\n  ) { }\n\n  ngOnInit() {\n    this.ticketService.summary()\n    .subscribe((responseApi : ResponseApi) => {\n      this.summary = responseApi.data;\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  // classes default\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0LWRldGFpbC90aWNrZXQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-10\\\" style=\\\"margin-left: 0%\\\">\\n  <div class=\\\"box box-body\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3>Detalhe do Ticket</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <strong>{{ message.text }}</strong>\\n      </div>\\n      <div class=\\\"box-body\\\">\\n        <ul class=\\\"list-group list-group-unbordered\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <b>Número: </b><span>{{ ticket.number }}</span>\\n            <span class=\\\"pull-right\\\">\\n              <b>Título: </b><span>{{ ticket.title }}</span>\\n            </span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <b>Prioridade: </b><span>{{ ticket.priority }}</span>\\n            <span class=\\\"pull-right\\\">\\n              <b>Criado por: </b><span>{{ ticket.user?.email }}</span>\\n            </span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <b>Status: </b><span>{{ ticket.status }}</span>\\n            <span class=\\\"pull-right\\\">\\n              <b>Atríbuido para: </b><span>{{ticket?.assignedUser?.email}}</span>\\n            </span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <b>Data: </b><span>{{ ticket.date | date:'dd/MM/yyyy' }}</span>\\n            <span class=\\\"pull-right\\\">\\n              <b>Descrição: </b><span>{{ ticket.description }}</span>\\n            </span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <span><img [src]=\\\"ticket.image\\\" witdh=\\\"370px\\\"/></span>\\n            <span class=\\\"pull-right\\\">\\n              <table class=\\\"table table-bordered\\\">\\n                <tr>\\n                  <td>Usuário Alteração</td>\\n                  <td>Data Alteração</td>\\n                  <td>Status Alteração</td>\\n                <tr *ngFor=\\\"let change of ticket.changes\\\">\\n                  <td>{{ change?.userChange.email }}</td>\\n                  <td>{{ change?.dateChangeStatus | date:'dd/MM/yyyy HH:mm:ss' }}</td>\\n                  <td>{{ change?.status }}</td>\\n                </tr>\\n              </table>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"box-footer\\\">\\n        <button *ngIf=\\\"shared.user.profile == 'TECHNICIAN' && ticket.status == 'Novo'\\\"\\n          (click)=\\\"changeStatus('Atribuido')\\\"\\n          class=\\\"btn btn-primary\\\">Aceito\\n        </button>\\n        &nbsp;\\n        <button *ngIf=\\\"shared.user.profile == 'TECHNICIAN' && (ticket.status == 'Atribuido' || ticket.status == 'Reprovado')\\\"\\n          (click)=\\\"changeStatus('Resolvido')\\\"\\n          class=\\\"btn btn-primary\\\">Resolver\\n        </button>\\n        &nbsp;\\n        <button *ngIf=\\\"shared.user.profile == 'CUSTOMER' && ticket.status == 'Resolvido'\\\"\\n          (click)=\\\"changeStatus('Aprovado')\\\"\\n          class=\\\"btn btn-primary\\\">Aprovar\\n        </button>\\n        &nbsp;\\n        <button *ngIf=\\\"shared.user.profile == 'CUSTOMER' && ticket.status == 'Resolvido'\\\"\\n          (click)=\\\"changeStatus('Reprovado')\\\"\\n          class=\\\"btn btn-primary\\\">Reprovar\\n        </button>\\n        &nbsp;\\n        <button *ngIf=\\\"shared.user.profile == 'TECHNICIAN' && ticket.status == 'Aprovado'\\\"\\n          (click)=\\\"changeStatus('Finalizado')\\\"\\n          class=\\\"btn btn-primary\\\">Finalizar\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { Ticket } from 'src/app/model/ticket.model';\nimport { TicketService } from 'src/app/services/ticket.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ticket-detail',\n  templateUrl: './ticket-detail.component.html',\n  styleUrls: ['./ticket-detail.component.css']\n})\nexport class TicketDetailComponent implements OnInit {\n\n  ticket = new Ticket('', 0, '', '', '', '', null, null, '', null);\n  shared : SharedService;\n  message : {};\n  classCss : {};\n\n  constructor(\n    private ticketService : TicketService,\n    private route : ActivatedRoute\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id : string = this.route.snapshot.params['id'];\n    if(id != undefined){\n      this.findById(id);\n    }\n  }\n\n  findById(id : string) {\n    this.ticketService.findById(id).subscribe((responseApi : ResponseApi) => {\n      this.ticket = responseApi.data;\n      this.ticket.date = new Date(this.ticket.date).toISOString();\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  changeStatus(status : string) : void {\n    this.ticketService.changeStatus(status, this.ticket)\n    .subscribe((responseApi : ResponseApi) => {\n      this.ticket = responseApi.data;\n      this.ticket.date = new Date(this.ticket.date).toISOString();\n      this.showMessage({\n        type : 'success',\n        text : 'Status alterado'\n      });\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0LWxpc3QvdGlja2V0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n  <span>{{ message.text }}</span>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Lista de Tickets</h3>\\n      </div>\\n\\n      <!-- FILTROS -->\\n      <div class=\\\"box-body\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"shared.user.profile == 'TECHNICIAN'\\\">\\n          <div class=\\\"checkbox\\\">\\n            <label>\\n              <input \\n                type=\\\"checkbox\\\" \\n                [(ngModel)]=\\\"assignedToMe\\\" \\n                name=\\\"assignedToMe\\\" \\n                id=\\\"assignedToMe\\\">\\n                <b>Atribuído a mim</b>\\n             </label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"inputNumber\\\" class=\\\"col-sm-2 control-label\\\">Número</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input \\n                    type=\\\"number\\\" \\n                    [(ngModel)]=\\\"ticketFilter.number\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"number\\\" \\n                    id=\\\"inputNumber\\\">\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"inputTitle\\\" class=\\\"col-sm-2 control-label\\\">Título</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input \\n                    type=\\\"text\\\" \\n                    [(ngModel)]=\\\"ticketFilter.title\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"title\\\" \\n                    id=\\\"inputTitle\\\">\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"inputStatus\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <select \\n                    type=\\\"text\\\" \\n                    [(ngModel)]=\\\"ticketFilter.status\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"status\\\" \\n                    id=\\\"inputStatus\\\"\\n                    style=\\\"width: 100%\\\">\\n                    <option>Novo</option>\\n                    <option>Resolvido</option>\\n                    <option>Aprovado</option>\\n                    <option>Desaprovado</option>\\n                    <option>Atribuído</option>\\n                    <option>Finalizado</option>\\n                </select>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"inputPriority\\\" class=\\\"col-sm-2 control-label\\\">Prioridade</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <select \\n                    type=\\\"text\\\" \\n                    [(ngModel)]=\\\"ticketFilter.priority\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"priority\\\" \\n                    id=\\\"inputPriority\\\"\\n                    style=\\\"width: 100%\\\">\\n                    <option>Alta</option>\\n                    <option>Normal</option>\\n                    <option>Baixa</option>\\n                </select>\\n              </div>\\n          </div>\\n        </div>\\n      <div class=\\\"box-footer\\\">\\n        <button class=\\\"btn btn-info pull-left\\\" (click)=\\\"cleanFilter();\\\">Limpar</button>\\n        <button style=\\\"margin-left: 10px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"filter();\\\">Filtrar</button>\\n      </div>\\n\\n      <!-- TABELA -->\\n      <div class=\\\"box-body\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <tr>\\n            <th>Número</th>\\n            <th>Título</th>\\n            <th>Prioridade</th>\\n            <th>Status</th>\\n            <th>Proprietário</th>\\n            <th style=\\\"width: 40px\\\" *ngIf=\\\"shared.user.profile == 'CUSTOMER'\\\">&nbsp;</th>\\n            <th style=\\\"width: 40px\\\" *ngIf=\\\"shared.user.profile == 'CUSTOMER'\\\">&nbsp;</th>\\n            <th style=\\\"width: 40px\\\">&nbsp;</th>\\n          </tr>\\n          <tr *ngFor=\\\"let ticket of listTicket\\\">\\n            <td>{{ ticket.number }}</td>\\n            <td>{{ ticket.title }}</td>\\n            <td>{{ ticket.priority }}</td>\\n            <td>{{ ticket.status }}</td>\\n            <td>{{ ticket.user.email }}</td>\\n            <td *ngIf=\\\"shared.user.profile == 'CUSTOMER'\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"edit(ticket.id);\\\">Editar</button>\\n            </td>\\n            <td *ngIf=\\\"shared.user.profile == 'CUSTOMER'\\\">\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(ticket.id);\\\">Excluir</button>\\n            </td>\\n            <td>\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"detail(ticket.id);\\\">Detail</button>\\n            </td>\\n          </tr>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"box-footer clearfix\\\">\\n        <ul class=\\\"pagination pagination-sm no-margin pull-right\\\">\\n          <li><a href=\\\"\\\" (click)=\\\"setPreviousPage($event);\\\">&laquo;</a></li>\\n          <li *ngFor=\\\"let p of pages; let i = index\\\">\\n            <a [ngClass]=\\\"{'pagination-focus' : i == page}\\\" href=\\\"\\\" (click)=\\\"setPage(i, $event);\\\">{{i+1}}</a>\\n          </li>\\n          <li><a href=\\\"\\\" (click)=\\\"setNextPage($event);\\\">&raquo;</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { Ticket } from 'src/app/model/ticket.model';\nimport { DialogService } from 'src/app/services/dialog.service';\nimport { TicketService } from 'src/app/services/ticket.service';\nimport { Router } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ticket-list',\n  templateUrl: './ticket-list.component.html',\n  styleUrls: ['./ticket-list.component.css']\n})\nexport class TicketListComponent implements OnInit {\n\n  assignedToMe : boolean = false;\n  page : number = 0;\n  count : number = 5;\n  pages : Array<number>;\n  shared : SharedService;\n  message : {};\n  classCss : {};\n  listTicket : [];\n  ticketFilter = new Ticket('', null, '', '', '', '', null, null, '', null); //??\n\n  constructor(\n    private dialogService : DialogService,\n    private ticketService : TicketService,\n    private router : Router\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    this.findAll(this.page, this.count);\n  }\n\n  findAll(page : number, count : number) {\n    this.ticketService.findAll(page, count).subscribe((responseApi : ResponseApi) => {\n      this.listTicket = responseApi['data']['content'];\n      this.pages = new Array(responseApi['data']['totalPages']);\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  filter() : void {\n    console.log(' this.assignedToMe --> ',this.assignedToMe);\n    console.log(' number --> ',this.assignedToMe);\n    this.page = 0;\n    this.count = 5;\n    this.ticketService.findByParams(this.page, this.count, this.assignedToMe, this.ticketFilter)\n    .subscribe((responseApi : ResponseApi) => {\n      this.ticketFilter.title = this.ticketFilter.title == 'uninformed' ? '' : this.ticketFilter.title;\n      this.ticketFilter.number = this.ticketFilter.number == 0 ? null : this.ticketFilter.number;\n      this.listTicket = responseApi['data']['content'];\n      this.pages = new Array(responseApi['data']['content']);\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  cleanFilter() : void {\n    this.assignedToMe = false;\n    this.page = 0;\n    this.count = 5;\n    this.ticketFilter = new Ticket('', null, '', '', '', '', null, null, '', null);\n    this.findAll(this.page, this.count);\n  }\n\n  edit(id : string) {\n    this.router.navigate(['/ticket-new', id]);\n  }\n\n  detail(id : string) {\n    this.router.navigate(['/ticket-detail', id]);\n  }\n\n  delete(id : string) {\n    this.dialogService.confirm('Tem certeza que deseja excluir?')\n    .then((canDelete : boolean) => {\n      if(canDelete){\n        this.message = {};\n        this.ticketService.delete(id).subscribe((responseApi : ResponseApi) => {\n          this.showMessage({\n            type : 'success',\n            text : 'Registro deletado'\n          });\n          this.findAll(this.page, this.count);\n        }, err => {\n          this.showMessage({\n            type : 'error',\n            text : err['error']['errors'][0]\n          });\n        });\n      }\n    });\n  }\n\n  //PAGINACAO\n  setNextPage(event : any) {\n    event.preventDefault();\n    if(this.page+1 < this.pages.length) {\n      this.page = this.page + 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPreviousPage(event : any) {\n    event.preventDefault();\n    if(this.page > 0) {\n      this.page = this.page - 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPage(i, event : any) {\n    event.preventDefault();\n    if(this.page > 0) {\n      this.page = i;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0LW5ldy90aWNrZXQtbmV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-6\\\" style=\\\"margin-left:  0%\\\">\\n    <div class=\\\"box box-info\\\">\\n      <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Novo Ticket</h3>\\n      </div>\\n      <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n  \\n        <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n          <span>{{ message.text }}</span>\\n        </div>\\n  \\n        <div class=\\\"box-body\\\">\\n  \\n          <!-- TITULO -->\\n          <div [ngClass]=\\\"getFromGroupClass(title.invalid, title.dirty)\\\">\\n            <label for=\\\"inputTitle\\\" class=\\\"col-sm-2 control-label\\\">Título</label>\\n  \\n            <div class=\\\"col-sm-10\\\">\\n              <input \\n                    type=\\\"text\\\" \\n                    [(ngModel)]=\\\"ticket.title\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"title\\\" \\n                    id=\\\"inputTitle\\\" \\n                    #title=\\\"ngModel\\\" \\n                    placeholder=\\\"Título\\\" \\n                    required>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"title.invalid && title.dirty\\\">Título é obrigatório</span>\\n            </div>\\n          </div>\\n  \\n          <!-- PRIORIDADE -->\\n          <div [ngClass]=\\\"getFromGroupClass(priority.invalid, priority.dirty)\\\">\\n            <label for=\\\"inputPriority\\\" class=\\\"col-sm-2 control-label\\\">Prioridade</label>\\n  \\n            <div class=\\\"col-sm-10\\\">\\n                <select [(ngModel)]=\\\"ticket.priority\\\" \\n                      class=\\\"form-control select2\\\" \\n                      id=\\\"inputPriority\\\" \\n                      name=\\\"priority\\\" \\n                      #priority=\\\"ngModel\\\" \\n                      style=\\\"width: 100%\\\" \\n                      required>\\n                      <option>Alta</option>\\n                      <option>Normal</option>\\n                      <option>Baixa</option>\\n                </select>\\n                <span class=\\\"help-block\\\" *ngIf=\\\"priority.invalid && priority.dirty\\\">Prioridade é obrigatória</span>\\n            </div>\\n          </div>\\n  \\n          <!-- DESCRICAO -->\\n          <div [ngClass]=\\\"getFromGroupClass(description.invalid, description.dirty)\\\">\\n            <label for=\\\"inputDescription\\\" class=\\\"col-sm-2 control-label\\\">Descrição</label>\\n  \\n            <div class=\\\"col-sm-10\\\">\\n              <textarea \\n                    [(ngModel)]=\\\"ticket.description\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"description\\\" \\n                    rows=\\\"3\\\"\\n                    id=\\\"inputDescription\\\" \\n                    #description=\\\"ngModel\\\" \\n                    placeholder=\\\"Descrição\\\" \\n                    required></textarea>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"description.invalid && description.dirty\\\">Descrição é obrigatória</span>\\n            </div>\\n          </div>\\n\\n          <!-- IMAGEM -->\\n          <div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"inputImage\\\" class=\\\"col-sm-2 control-label\\\">Imagem</label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <img [src]=\\\"ticket.image\\\" width=\\\"50%\\\" height=\\\"50%\\\">\\n                  <input type=\\\"file\\\" id=\\\"image\\\" (change)=\\\"onFileChange($event);\\\">\\n                </div>\\n            </div>\\n          </div>\\n  \\n        </div>\\n        <div class=\\\"box-footer\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Gravar</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\"","import { ActivatedRoute } from '@angular/router';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Ticket } from 'src/app/model/ticket.model';\nimport { TicketService } from 'src/app/services/ticket.service';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ticket-new',\n  templateUrl: './ticket-new.component.html',\n  styleUrls: ['./ticket-new.component.css']\n})\nexport class TicketNewComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm\n\n  ticket = new Ticket('', 0, '', '', '', '', null, null, '', null);\n  shared : SharedService;\n  message : {};\n  classCss : {};\n\n  constructor(\n    private ticketService : TicketService,\n    private route : ActivatedRoute\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id : string = this.route.snapshot.params['id'];\n    if(id != undefined){\n      this.findById(id);\n    }\n  }\n\n  findById(id : string) {\n    this.ticketService.findById(id).subscribe((responseApi : ResponseApi) => {\n      this.ticket = responseApi.data;\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  register(){\n    this.message = {};\n    this.ticketService.createOrUpdate(this.ticket).subscribe((responseApi : ResponseApi) => {\n      this.ticket = new Ticket('', 0, '', '', '', '', null, null, '', null);\n      let ticket : Ticket = responseApi.data;\n      this.form.resetForm();\n      this.showMessage({\n        type : 'success',\n        text : `${ticket.title} cadastrado com sucesso`\n      });\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  //GRAVAR IMAGEM\n  onFileChange(event) : void {\n    if(event.target.files[0].size > 2000000){\n      this.showMessage({\n        type : 'error',\n        text : 'Tamanho máximo da imagem: 2 MB'\n      });\n    } else {\n      this.ticket.image = '';\n      var reader = new FileReader();\n      reader.onloadend = (e : Event) => {\n        this.ticket.image = reader.result as string; //CAST string\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n  <span>{{ message.text }}</span>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Lista de Usuários</h3>\\n      </div>\\n\\n      <div class=\\\"box-body\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <tr>\\n            <th>Email</th>\\n            <th>Perfil</th>\\n            <th style=\\\"width: 40px\\\">&nbsp;</th>\\n            <th style=\\\"width: 40px\\\">&nbsp;</th>\\n          </tr>\\n          <tr *ngFor=\\\"let user of listUser\\\">\\n            <td>{{ user.email }}</td>\\n            <td>{{ user.profile }}</td>\\n            <td><button  class=\\\"btn btn-primary\\\" (click)=\\\"edit(user.id);\\\">Editar</button></td>\\n            <td><button  class=\\\"btn btn-danger\\\" (click)=\\\"delete(user.id);\\\">Excluir</button></td>\\n          </tr>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"box-footer clearfix\\\">\\n        <ul class=\\\"pagination pagination-sm no-margin pull-right\\\">\\n          <li><a href=\\\"\\\" (click)=\\\"setPreviousPage($event);\\\">&laquo;</a></li>\\n          <li *ngFor=\\\"let p of pages; let i = index\\\">\\n            <a [ngClass]=\\\"{'pagination-focus' : i == page}\\\" href=\\\"\\\" (click)=\\\"setPage(i, $event);\\\">{{i+1}}</a>\\n          </li>\\n          <li><a href=\\\"\\\" (click)=\\\"setNextPage($event);\\\">&raquo;</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { DialogService } from './../../services/dialog.service';\nimport { UserService } from './../../services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { Router } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  page : number = 0;\n  count : number = 5;\n  pages : Array<number>;\n  shared : SharedService;\n  message : {};\n  classCss : {};\n  listUser = [];\n  \n  constructor(\n    private dialogService : DialogService,\n    private userService : UserService,\n    private router : Router\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    this.findAll(this.page, this.count);\n  }\n\n  findAll(page : number, count : number) {\n    this.userService.findAll(page, count).subscribe((responseApi : ResponseApi) => {\n      this.listUser = responseApi['data']['content'];\n      this.pages = new Array(responseApi['data']['totalPages']);\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  edit(id : string) {\n    this.router.navigate(['/user-new', id]);\n  }\n\n  delete(id : string) {\n    this.dialogService.confirm('Tem certeza que deseja excluir?')\n    .then((canDelete : boolean) => {\n      if(canDelete){\n        this.message = {};\n        this.userService.delete(id).subscribe((responseApi : ResponseApi) => {\n          this.showMessage({\n            type : 'success',\n            text : 'Registro deletado'\n          });\n          this.findAll(this.page, this.count);\n        }, err => {\n          this.showMessage({\n            type : 'error',\n            text : err['error']['errors'][0]\n          });\n        });\n      }\n    });\n  }\n\n  setNextPage(event : any) {\n    event.preventDefault();\n    if(this.page+1 < this.pages.length) {\n      this.page = this.page + 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPreviousPage(event : any) {\n    event.preventDefault();\n    if(this.page > 0) {\n      this.page = this.page - 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPage(i, event : any) {\n    event.preventDefault();\n    if(this.page > 0) {\n      this.page = i;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1uZXcvdXNlci1uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--\\n<div class=\\\"col-md-6\\\" style=\\\"margin-left:  0%\\\">\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">Novo Usuário</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <span>{{ message.text }}</span>\\n      </div>\\n\\n      <div class=\\\"box-body\\\">\\n\\n        <div [ngClass]=\\\"getFromGroupClass(nome.invalid, nome.dirty)\\\">\\n          <label for=\\\"inputNome\\\" class=\\\"col-sm-2 control-label\\\">Nome</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input \\n                  type=\\\"text\\\" \\n                  [(ngModel)]=\\\"user.nome\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"nome\\\" \\n                  id=\\\"inputNome\\\" \\n                  #nome=\\\"ngModel\\\" \\n                  placeholder=\\\"Nome\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"nome.invalid && nome.dirty\\\">Nome é inválido</span>\\n          </div>\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(email.invalid, email.dirty)\\\">\\n          <label for=\\\"inputEmail\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input \\n                  type=\\\"email\\\" \\n                  [(ngModel)]=\\\"user.email\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"email\\\" \\n                  id=\\\"inputEmail\\\" \\n                  #email=\\\"ngModel\\\" \\n                  placeholder=\\\"Email\\\" \\n                  email>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.dirty\\\">Email é inválido</span>\\n          </div>\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(username.invalid, username.dirty)\\\">\\n            <label for=\\\"inputUsername\\\" class=\\\"col-sm-2 control-label\\\">Nome de Usuário</label>\\n  \\n            <div class=\\\"col-sm-10\\\">\\n              <input \\n                    type=\\\"text\\\" \\n                    [(ngModel)]=\\\"user.username\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"username\\\" \\n                    id=\\\"inputUsername\\\" \\n                    #username=\\\"ngModel\\\" \\n                    placeholder=\\\"Nome de Usuário\\\" \\n                    required>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"username.invalid && username.dirty\\\">Nome de Usuário é necessário</span>\\n            </div>\\n          </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(senha.invalid, senha.dirty)\\\">\\n          <label for=\\\"inputSenha\\\" class=\\\"col-sm-2 control-label\\\">Senha</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input \\n                  type=\\\"password\\\" \\n                  [(ngModel)]=\\\"user.senha\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"senha\\\" \\n                  id=\\\"inputSenha\\\" \\n                  #senha=\\\"ngModel\\\" \\n                  placeholder=\\\"Senha\\\" \\n                  required>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"senha.invalid && senha.dirty\\\">Senha é necessária</span>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"box-footer\\\">\\n        <button type=\\\"button\\\" [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-info\\\">Voltar</button>\\n        <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Gravar</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n-->\\n\\n<!-- LAYOUT ALTERNATIVO -->\\n<div class=\\\"login-box\\\">\\n  <div class=\\\"login-logo\\\">\\n    <p class=\\\"\\\"><b>Lista de Compras </b>Inteligente</p>\\n  </div>\\n\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"card-body\\\">\\n      <p></p>\\n      <p class=\\\"login-box-msg\\\">Criar sua conta para acessar o sistema</p>\\n\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <span>{{ message.text }}</span>\\n      </div>\\n\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\n        <div [ngClass]=\\\"getFromGroupClass(nome.invalid, nome.dirty)\\\">\\n\\n          <div class=\\\"mb-3\\\">\\n            <input type=\\\"text\\\" \\n            [(ngModel)]=\\\"user.nome\\\" \\n            class=\\\"form-control\\\" \\n            name=\\\"nome\\\" \\n            id=\\\"inputNome\\\" \\n            #nome=\\\"ngModel\\\" \\n            placeholder=\\\"Nome\\\"\\n            required>\\n\\n            <span class=\\\"help-block\\\" *ngIf=\\\"nome.invalid && nome.dirty\\\">Nome é necessário</span>\\n          </div>\\n\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(email.invalid, email.dirty)\\\">\\n\\n          <div class=\\\"mb-3\\\">\\n            <input type=\\\"email\\\" \\n            [(ngModel)]=\\\"user.email\\\" \\n            class=\\\"form-control\\\" \\n            name=\\\"email\\\" \\n            id=\\\"inputEmail\\\" \\n            #email=\\\"ngModel\\\" \\n            placeholder=\\\"Email\\\"\\n            email>\\n\\n            <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.dirty\\\">Email é inválido</span>\\n          </div>\\n\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(username.invalid, username.dirty)\\\">\\n\\n          <div class=\\\"mb-3\\\">\\n            <input type=\\\"text\\\" \\n            [(ngModel)]=\\\"user.username\\\" \\n            class=\\\"form-control\\\" \\n            name=\\\"username\\\" \\n            id=\\\"inputUsername\\\" \\n            #username=\\\"ngModel\\\" \\n            placeholder=\\\"Nome de Usuário\\\"\\n            required>\\n\\n            <span class=\\\"help-block\\\" *ngIf=\\\"username.invalid && username.dirty\\\">Nome de Usuário é necessário</span>\\n          </div>\\n\\n        </div>\\n\\n        <div [ngClass]=\\\"getFromGroupClass(senha.invalid, senha.dirty)\\\">\\n\\n          <div class=\\\"mb-3\\\">\\n            <input type=\\\"password\\\" \\n            [(ngModel)]=\\\"user.senha\\\" \\n            class=\\\"form-control\\\" \\n            name=\\\"senha\\\" \\n            id=\\\"inputSenha\\\" \\n            #senha=\\\"ngModel\\\" \\n            placeholder=\\\"Senha\\\"\\n            required>\\n          </div>\\n\\n          <span class=\\\"help-block\\\" *ngIf=\\\"senha.invalid && senha.dirty\\\">Senha é necessária</span>\\n        </div>\\n        \\n        <div class=\\\"col-8\\\"></div>\\n        <div class=\\\"col-4\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info btn-block\\\">Gravar</button>\\n        </div>\\n        \\n      </form>\\n\\n      <div class=\\\"social-auth-links text-center mb-3\\\">\\n        <p></p>\\n      </div>\\n\\n      <p class=\\\"mb-1\\\"></p>\\n      <p class=\\\"mb-0\\\">\\n        <a [routerLink]=\\\"['/login']\\\"><h4>Faça login em vez disso</h4></a>\\n      </p>\\n\\n    </div>\\n  </div>\\n</div>\"","import { UserService } from './../../services/user.service';\nimport { SharedService } from './../../services/shared.service';\nimport { User } from './../../model/user.model';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-user-new',\n  templateUrl: './user-new.component.html',\n  styleUrls: ['./user-new.component.css']\n})\nexport class UserNewComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm\n\n  user = new User('', '', '', '', '');\n  shared : SharedService;\n  message: {};\n  classCss: {};\n\n  constructor(\n      private UserService : UserService,\n      private route : ActivatedRoute\n    ) {\n\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id : string = this.route.snapshot.params['id'];\n    if(id != undefined){\n      this.findById(id);\n    }\n  }\n\n  findById(id : string) {\n    this.UserService.findById(id).subscribe((responseApi : ResponseApi) => {\n      this.user = responseApi.data;\n      this.user.senha = '';\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  register(){\n    this.message = {};\n    this.UserService.createOrUpdate(this.user).subscribe((responseApi : ResponseApi) => {\n      this.user = new User('', '', '', '', '');\n      let userRet : User = responseApi.data;\n      this.form.resetForm();\n      this.showMessage({\n        type : 'success',\n        text : `${userRet.username} cadastrado com sucesso`\n      });\n      window.location.href = '/login';\n    }, err => {\n      this.showMessage({\n        type : 'error',\n        text : err['error']['errors'][0]\n      });\n    });\n  }\n\n  private showMessage(message : {type : string, text : string}) : void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => { //LIMPA MENSAGEM\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type : string) : void {\n    this.classCss = {\n      'alert' : true\n    }\n    this.classCss['alert-'+type] = true;\n  }\n\n  getFromGroupClass(isInvalid : boolean, isDirty): {} {\n    return {\n      'form-group' : true,\n      'has-error' : isInvalid && isDirty,\n      'has-success' : !isInvalid && isDirty\n    };\n  }\n}\n","export class Ingrediente {\r\n    constructor(\r\n        public id: string,\r\n        public nome : string\r\n    ){}\r\n}","export class Summary {\r\n    public amountNew : number;\r\n    public amountResolved : number;\r\n    public amountApproved : number;\r\n    public amountDisapproved : number;\r\n    public amountAssigned : number;\r\n    public amountClosed : number;\r\n}","import { User } from './user.model';\r\n\r\nexport class Ticket {\r\n    constructor(\r\n        public id : string,\r\n        public number : number,\r\n        public title : string,\r\n        public status : string,\r\n        public priority : string, \r\n        public image : string,\r\n        public user : User,\r\n        public assignedUser : User,\r\n        public date : string,\r\n        public changes : Array<string>\r\n    ){}\r\n}","export class User {\r\n    constructor(\r\n        public id: string,\r\n        public nome : string,\r\n        public email : string,\r\n        public senha : string,\r\n        public username : string\r\n    ){}\r\n\r\n    //TESTE F5\r\n    /**/public toString(){\r\n        return this.id+\",\"+this.username+\",\"+this.senha;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n\r\n    confirm(message : string) {\r\n        return new Promise (resolve => {\r\n            return resolve(window.confirm(message || 'Confirmar?'));\r\n        })\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Ingrediente } from '../model/ingrediente.model';\nimport { BACK_END_API } from './listacomprasinteligente.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredienteService {\n\n  constructor(private http: HttpClient) {}\n\n  createOrUpdate(ingrediente : Ingrediente) {\n    if(ingrediente.id != null && ingrediente.id != ''){\n      return this.http.put(`${BACK_END_API}/api/ingrediente`, ingrediente); //UPDATE\n    } else {\n      ingrediente.id = null;\n      return this.http.post(`${BACK_END_API}/api/ingrediente`, ingrediente); //CREATE\n    }\n  }\n\n  findAll(page : number, count : number) {\n    return this.http.get(`${BACK_END_API}/api/ingrediente/${page}/${count}`);\n  }\n\n  findById(id : string) {\n    return this.http.get(`${BACK_END_API}/api/ingrediente/${id}`);\n  }\n\n  delete(id : string) {\n    return this.http.delete(`${BACK_END_API}/api/ingrediente/${id}`);\n  }\n}\n","export const BACK_END_API: string = 'http://localhost:8080/tcc';","import { Injectable, EventEmitter } from '@angular/core';\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  public static instance : SharedService = null;\n  user : User;\n  token : string;\n  showTemplate = new EventEmitter<boolean>();\n\n  constructor() {\n    return SharedService.instance = SharedService.instance || this;\n  }\n\n  public static getInstance() {\n    if(this.instance == null){\n      this.instance = new SharedService();\n    }\n    return this.instance;\n  }\n\n  isLoggedIn() : boolean {\n    if(this.user == null){\n      return false;\n    }\n    return this.user.email != '';\n    /*if(sessionStorage.getItem(\"currentUser\") == null){\n      return false;\n    }\n    return true;*/\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BACK_END_API } from './listacomprasinteligente.api';\nimport { Ticket } from '../model/ticket.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketService {\n\n  constructor(private http : HttpClient) {}\n\n  createOrUpdate(ticket : Ticket) {\n    if(ticket.id != null && ticket.id != ''){\n      return this.http.put(`${BACK_END_API}/api/ticket`, ticket);\n    } else {\n      ticket.id = null;\n      ticket.status = 'Novo';\n      return this.http.post(`${BACK_END_API}/api/ticket`, ticket);\n    }\n  }\n\n  findAll(page : number, count : number) {\n    return this.http.get(`${BACK_END_API}/api/ticket/${page}/${count}`);\n  }\n\n  findById(id : string) {\n    return this.http.get(`${BACK_END_API}/api/ticket/${id}`);\n  }\n\n  delete(id : string) {\n    return this.http.delete(`${BACK_END_API}/api/ticket/${id}`);\n  }\n\n  findByParams(page : number, count : number, assignedToMe : boolean, t : Ticket) {\n    t.number = t.number == null ? 0 : t.number;\n    t.title = t.title == '' ? 'uninformed' : t.title;\n    t.status = t.status == '' ? 'uninformed' : t.status;\n    t.priority = t.priority == '' ? 'uninformed' : t.priority;\n\n    console.log(`${BACK_END_API}/api/ticket/${page}/${count}/${t.number}/${t.title}/${t.status}/${t.priority}/${assignedToMe}`);\n    return this.http.get(`${BACK_END_API}/api/ticket/${page}/${count}/${t.number}/${t.title}/${t.status}/${t.priority}/${assignedToMe}`)\n  }\n\n  changeStatus(status : string, ticket : Ticket) {\n    return this.http.put(`${BACK_END_API}/api/ticket/${ticket.id}/${status}`, ticket);\n  }\n\n  summary() {\n    return this.http.get(`${BACK_END_API}/api/ticket/summary`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../model/user.model';\nimport { BACK_END_API } from './listacomprasinteligente.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) {}\n\n  login(user : User) {\n    return this.http.post(`${BACK_END_API}/api/auth`, user);\n  }\n\n  createOrUpdate(user : User) {\n    if(user.id != null && user.id != ''){\n      return this.http.put(`${BACK_END_API}/api/usuario`, user); //UPDATE\n    } else {\n      user.id = null;\n      return this.http.post(`${BACK_END_API}/api/usuario`, user); //CREATE\n    }\n  }\n\n  findAll(page : number, count : number) {\n    return this.http.get(`${BACK_END_API}/api/usuario/${page}/${count}`);\n  }\n\n  findById(id : string) {\n    return this.http.get(`${BACK_END_API}/api/usuario/${id}`);\n  }\n\n  delete(id : string) {\n    return this.http.delete(`${BACK_END_API}/api/usuario/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}